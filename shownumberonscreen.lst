     1                                  start:
     2                                  		;在屏幕上显示数字65535
     3 00000000 B8FFFF                  		mov ax, 65535
     4 00000003 31D2                    		xor dx, dx					;将dx清零
     5 00000005 BB0A00                  		mov bx, 10
     6 00000008 F7F3                    		div bx						;ax里存放的是商6553，dx里存放余数5
     7                                  		
     8 0000000A 80C230                  		add dl, 0x30				;将数字转换为对应的数字字符
     9                                  		
    10 0000000D B90000                  		mov cx, 0
    11 00000010 8ED9                    		mov ds, cx					;段地址不能直接存放必须用通用寄存器中转
    12                                  		
    13 00000012 8816[8A7C]              		mov [0x7c00+buffer], dl		;7c00+8a=7c8a，颠倒一下变成8a7c
    14                                  		
    15 00000016 31D2                    		xor dx, dx
    16 00000018 F7F3                    		div bx
    17 0000001A 80C230                  		add dl, 0x30
    18 0000001D 8816[8B7C]              		mov [0x7c00+buffer+1], dl
    19                                  		
    20 00000021 31D2                    		xor dx, dx
    21 00000023 F7F3                    		div bx
    22 00000025 80C230                  		add dl, 0x30
    23 00000028 8816[8C7C]              		mov [0x7c00+buffer+2], dl
    24                                  		
    25 0000002C 31D2                    		xor dx, dx
    26 0000002E F7F3                    		div bx
    27 00000030 80C230                  		add dl, 0x30
    28 00000033 8816[8D7C]              		mov [0x7c00+buffer+3], dl
    29                                  		
    30 00000037 31D2                    		xor dx, dx
    31 00000039 F7F3                    		div bx
    32 0000003B 80C230                  		add dl, 0x30
    33 0000003E 8816[8E7C]              		mov [0x7c00+buffer+4], dl
    34                                  		
    35                                  		;最后再将al中字符编码写入现存内偏移地址为0的地方，对应着显示器左上角的位置
    36                                  		;取数字字符用段寄存器ds，操作显存用附加段寄存器es
    37 00000042 B900B8                  		mov cx, 0xb800
    38 00000045 8EC1                    		mov es, cx
    39                                  		
    40 00000047 A0[8E7C]                		mov al, [0x7c00+buffer+4]	;默认使用的是段寄存器ds
    41 0000004A 26A20000                		mov [es:0x00], al			;接着用段寄存器es来填充显存
    42 0000004E 26C60601002F            		mov byte [es:0x01], 0x2f	;接着写入属性字节，此时因为同时不知道数字和地址的长度，所以标明byte
    43                                  		
    44 00000054 A0[8D7C]                		mov al, [0x7c00+buffer+3]
    45 00000057 26A20200                		mov [es:0x02], al
    46 0000005B 26C60603002F            		mov byte [es:0x03], 0x2f
    47                                  		
    48 00000061 A0[8C7C]                		mov al, [0x7c00+buffer+2]
    49 00000064 26A20400                		mov [es:0x04], al
    50 00000068 26C60605002F            		mov byte [es:0x05], 0x2f
    51                                  		
    52 0000006E A0[8B7C]                		mov al, [0x7c00+buffer+1]
    53 00000071 26A20600                		mov [es:0x06], al
    54 00000075 26C60607002F            		mov byte [es:0x07], 0x2f
    55                                  		
    56 0000007B A0[8A7C]                		mov al, [0x7c00+buffer]
    57 0000007E 26A20800                		mov [es:0x08], al
    58 00000082 26C60609002F            		mov byte [es:0x09], 0x2f
    59                                  		
    60                                  again:
    61 00000088 EBFE                    		jmp again					;为了防止处理器跑飞
    62                                  	
    63 0000008A 0000000000              buffer	db 0, 0, 0, 0, 0			;buffer开辟的空间随着代码段顺延到了008a的位置，但是后来又复制了一份到7c00的后面
    64                                  
    65                                  current:
    66 0000008F 00<rep 16Fh>            		times 510-(current-start) db 0
    67                                  		
    68 000001FE 55AA                    		db 0x55, 0xaa
